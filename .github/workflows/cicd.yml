name: Build and Publish npm

on:
  push:
    branches:
      - 'feature/**'
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: generate access token
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: repo checkout
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Set up Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: lerna bootstrap
        run: |
          npm install -g yarn
          npm install -g lerna@6.6.2
          yarn run bootstrap

      - name: build library
        run: yarn run build

      - name: "Retain build artifact: api"
        uses: actions/upload-artifact@v3
        with:
          name: nl-portal-api
          path: packages/api/dist/
          retention-days: 1

      - name: "Retain build artifact: authentication"
        uses: actions/upload-artifact@v3
        with:
          name: nl-portal-authentication
          path: packages/authentication/dist/
          retention-days: 1

      - name: "Retain build artifact: localization"
        uses: actions/upload-artifact@v3
        with:
          name: nl-portal-localization
          path: packages/localization/dist/
          retention-days: 1

      - name: "Retain build artifact: user interface"
        uses: actions/upload-artifact@v3
        with:
          name: nl-portal-user-interface
          path: packages/user-interface/dist/
          retention-days: 1

  publish-npm:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == 'master'

    steps:
      - name: generate access token
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: repo checkout
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Set up Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: install yarn + lerna
        run: |
          npm install -g yarn
          npm install -g lerna@6.6.2

      - name: "Restore build artifact: api"
        uses: actions/download-artifact@v3
        with:
          name: nl-portal-api
          path: packages/api/dist/

      - name: "Restore build artifact: authentication"
        uses: actions/download-artifact@v3
        with:
          name: nl-portal-authentication
          path: packages/authentication/dist/

      - name: "Restore build artifact: localization"
        uses: actions/download-artifact@v3
        with:
          name: nl-portal-localization
          path: packages/localization/dist/

      - name: "Restore build artifact: user interface"
        uses: actions/download-artifact@v3
        with:
          name: nl-portal-user-interface
          path: packages/user-interface/dist/

      - name: lerna version
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "nl-portal"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "nl-portal"
        run: |
          git push --set-upstream origin HEAD
          yarn run release -- --yes
      
      - name: lerna publish
        env:
          NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: |
          npm config set "//registry.npmjs.org/:_authToken" "${NPM_ACCESS_TOKEN}"
          npm config set access public
          npm run publish -- --no-verify-access --yes
          npm config delete "//registry.npmjs.org/:_authToken"