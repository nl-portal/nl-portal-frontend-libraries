name: Build and Publish Artifacts
on:
  push:
    branches:
      - "release/*"
env:
  NODE_VERSION: "18.x"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Generate github app token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install
        run: npm install -g pnpm lerna@7.4.2 && pnpm install
      - name: Build
        run: pnpm build
      - name: Test
        run: pnpm test
      - name: "Retain build artifact: api"
        uses: actions/upload-artifact@v4
        with:
          name: nl-portal-api
          path: packages/api/dist/
          retention-days: 1
      - name: "Retain build artifact: authentication"
        uses: actions/upload-artifact@v4
        with:
          name: nl-portal-authentication
          path: packages/authentication/dist/
          retention-days: 1
      - name: "Retain build artifact: localization"
        uses: actions/upload-artifact@v4
        with:
          name: nl-portal-localization
          path: packages/localization/dist/
          retention-days: 1
      - name: "Retain build artifact: user interface"
        uses: actions/upload-artifact@v4
        with:
          name: nl-portal-user-interface
          path: packages/user-interface/dist/
          retention-days: 1
  publish-npm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Generate github app token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install
        run: |
          npm install -g pnpm
          npm install -g lerna@7.4.2
      - name: "Restore build artifact: api"
        uses: actions/download-artifact@v4
        with:
          name: nl-portal-api
          path: packages/api/dist/
      - name: "Restore build artifact: authentication"
        uses: actions/download-artifact@v4
        with:
          name: nl-portal-authentication
          path: packages/authentication/dist/
      - name: "Restore build artifact: localization"
        uses: actions/download-artifact@v4
        with:
          name: nl-portal-localization
          path: packages/localization/dist/
      - name: "Restore build artifact: user interface"
        uses: actions/download-artifact@v4
        with:
          name: nl-portal-user-interface
          path: packages/user-interface/dist/
      - name: lerna version
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "nl-portal"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "nl-portal"
        run: |
          git push --set-upstream origin HEAD
          pnpm run release --yes
      - name: lerna publish
        env:
          NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: |
          npm config set "//registry.npmjs.org/:_authToken" "${NPM_ACCESS_TOKEN}"
          npm config set access public
          npm run publish -- --no-verify-access --yes
          npm config delete "//registry.npmjs.org/:_authToken"